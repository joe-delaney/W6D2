quit
results.first
n
disp results
n
disp where_line
n
disp select_line
quit
results.first.length
n
disp results
quit
n
disp results
quit
n
disp results
params.map {|k, v| "#{k} = ?"}.join(' AND ')
disp params
quit 
self.class.table_name
DBConnection.execute(<<-SQL, *attribute_values.drop(1), id) UPDATE #{self.class.table_name} SET (#{set_line}) WHERE id = (?) SQL
    SQL
      id = (?)
    WHERE
      (#{set_line})
    SET
      #{self.class.table_name}
    UPDATE
DBConnection.execute(<<-SQL, *attribute_values.drop(1), id) 
disp col_names
n
quit
 n
n
disp set_line
self.class.columns.drop(1)
attribute_values.drop(1)
attribute_values.drop
attribute_values
c
n
disp id
dips id
n
disp set_line
n
disp col_names
quit
self.class.columns
self.class
self
quit
n
disp human
quit
n
result
n
self
c
self
c
self.class.columns.drop(1)
c
attribute_values
c
attribute_values
attribute_values.shift
self.class.columns.drop(1).map {|attr| "#{attr} = ?"}.join(',')
col_names.map {|attr| "#{attr} = ?"}.join(',')
self.class.columns.drop(1)
quit
(['?'] * (col_names.split(',').length)).join(',')
self.class.columns.drop(1).join(',')
self.class.columns.join(',')[3..-1]
n
disp col_names
quit 
n
disp col_names
quit
n
disp question_marks
n
disp col_names
quit
self.class.columns.map {|col| self.attributes[col] }
self.attributes[:id]
self.attributes
self.instance_variables
self.class.columns.map {|col| send("@#{col}")}
self.class.columns.map {|col| self."@#{col}"}
self.name
self.instance_variable_get(name)
self.instance_variable_get(:name)
self.send(:instance_variable_get, name)
self.send(:instance_variable_get, :name)
quit
self.class.columns[0][1..-1]
self.class.columns.map {|col| self.send(:instance_variable_get, "@#{col[1..-1]}")}
self.class.columns.map {|col| self.send(:instance_variable_get, "@#{col.to_s}")}
self.class.columns.map {|col| self.instance_variable_get("@#{col.to_s}")}
self.class.columns
self.class
quit
col_names.map {|col| self.instance_variable_get("@#{col.to_s}")}
col_names
col_names.map {|col| self.instance_variable_get("@#{col}")}
col_names.map {|col| self.instance_variable_get(col[1..-1])}
col_names.map {|col| self.instance_variable_get(col)}
n
quit
self.class.columns.map {|col| self.instance_variable_get(col)}
self.class.columns.map {|col| self.send("instance_variable_get", col)}
quit
self.class.columns.map {|col| self.send(:instance_variable_get, col)}
quit
self.class.columns.map {|col| send(:instance_variable_get, col)}
quit
self.class.columns
disp self.class
disp self.columns
disp columns
disp col_names
def col_names
quit
n
disp id
disp result
quit
s
disp result
s
n
disp hashes
self.columns
quit
self
self.class.name
self.name
self.class
self.name.class
class
self.class
s
n
disp hashes
quit
self.name
self.class.name
self.class
s
n
disp hashes
quit
n
disp hashes
